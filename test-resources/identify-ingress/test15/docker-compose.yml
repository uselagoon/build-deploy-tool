version: '2.3'

x-lagoon-project:
  # Lagoon project name (leave `&lagoon-project` when you edit this)
  &lagoon-project $PROJECT_NAME

x-environment:
  &default-environment
    # Environment ID
    ENVIRONMENT_TYPE_ID: $ENVIRONMENT_TYPE_ID
    # Machine name of the lagoon project.
    LAGOON_PROJECT: *lagoon-project
    # Route that should be used locally, if you are using pygmy, this route *must* end with .docker.amazee.io
    LAGOON_ROUTE: &default-url http://$LAGOON_ROUTE
    # Uncomment if you like to have the system behave like in production
    LAGOON_ENVIRONMENT_TYPE: $LAGOON_ENVIRONMENT_TYPE
    # The current Git branch of the Lagoon environment.
    # LAGOON_GIT_BRANCH: $LAGOON_GIT_BRANCH
    # Enable Xdebug within the .env file, then `make down` to reload the env.
    XDEBUG_ENABLE: $XDEBUG_ENABLE
    # The entrypoint script attempts to autodetect the DOCKERHOST for xdebug.
    # If it fails to detect your host, the following override is available:
    # DOCKERHOST: host.docker.internal
    # Increase PHP memory limit.
    PHP_MEMORY_LIMIT: 768M

x-site-branch:
  &site-branch $LAGOON_GIT_BRANCH

x-user:
  &default-user
    user: $DEFAULT_USER_ID

services:

  cli: # cli container, will be used for executing composer and any local commands (drush, drupal, etc.)
    build:
      context: .
      dockerfile: .lagoon/cli.dockerfile
      args:
        ENVIRONMENT_TYPE_ID: ${ENVIRONMENT_TYPE_ID}
        DOCKER_CLI_IMAGE_URI: ${DOCKER_CLI_IMAGE_URI}
    image: *lagoon-project # this image will be reused as `CLI_IMAGE` in subsequent Docker builds
    container_name: ${PROJECT_NAME}_cli
    labels:
      # Lagoon Labels
      lagoon.type: cli-persistent
      lagoon.persistent.name: nginx # mount the persistent storage of nginx into this container
      lagoon.persistent: /app/docroot/sites/default/files/ # location where the persistent storage should be mounted
    user: root
    environment:
      << : *default-environment # loads the defined environment variables from the top
    volumes:
      - ./.lagoon/scripts/bash_prompts.rc:/home/.bashrc
      - ./.lagoon/scripts/color_grid.sh:/home/color_grid.sh
    volumes_from:
      - container:amazeeio-ssh-agent

  nginx:
    build:
      context: .
      dockerfile: .lagoon/nginx.dockerfile
      args:
        CLI_IMAGE: *lagoon-project
        DOCKER_NGINX_IMAGE_URI: ${DOCKER_NGINX_IMAGE_URI}
        LAGOON_GIT_BRANCH: *site-branch
    container_name: ${PROJECT_NAME}_nginx
    labels:
      lagoon.type: nginx-php-persistent
      lagoon.persistent: /app/docroot/sites/default/files/
      lagoon.name: nginx
    << : *default-user # uses the defined user from top
    depends_on:
      - cli # basically just tells docker-compose to build the cli first
    environment:
      << : *default-environment # loads the defined environment variables from the top
      # LAGOON_LOCALDEV_URL: nginx-${LAGOON_ROUTE}
      LAGOON_LOCALDEV_URL: *default-url
    networks:
      - amazeeio-network
      - default
    volumes:
      - ./.lagoon/nginx/nginx-http.conf:/etc/nginx/conf.d/000-nginx-http.conf
      - ./.lagoon/nginx/app.conf:/etc/nginx/conf.d/app.conf

  php:
    build:
      context: .
      dockerfile: .lagoon/php.dockerfile
      args:
        CLI_IMAGE: *lagoon-project
        DOCKER_PHP_IMAGE_URI: ${DOCKER_PHP_IMAGE_URI}
    container_name: ${PROJECT_NAME}_php
    labels:
      lagoon.type: nginx-php-persistent
      lagoon.persistent: /app/docroot/sites/default/files
      lagoon.name: nginx
      lagoon.deployment.servicetype: php
    << : *default-user # uses the defined user from top
    depends_on:
      - cli # basically just tells docker-compose to build the cli first
    environment:
      << : *default-environment # loads the defined environment variables from the top

  mariadb:
    image: amazeeio/mariadb-drupal
    container_name: ${PROJECT_NAME}_db
    labels:
      lagoon.type: mariadb
    ports:
      - "3306" # exposes the port 3306 with a random local port, find it with `docker-compose port mariadb 3306`
    << : *default-user # uses the defined user from top
    environment:
      << : *default-environment
    volumes:
      # - .lagoon/mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
      # - /path/to/mariadb/data/on/host:/var/lib/mysql # Use bind mount
      - mysql:/var/lib/mysql

  # redis:
  #   image: amazeeio/redis
  #   labels:
  #     lagoon.type: redis
  #   << : *default-user # uses the defined user from top
  #   environment:
  #     << : *default-environment

  # solr7:
  #   # The DOCKERFILE makes use of this amazeeio image as a base and then loads our own config files into it.
  #   # Update the .lagoon/solr/7/solr-conf files before building to make changes to SOLR.
  #   # image: amazeeio/solr:7.7-drupal-latest
  #   build:
  #     context: .
  #     dockerfile: ./.lagoon/solr/7/solr.dockerfile
  #   labels:
  #     lagoon.type: solr
  #   ports:
  #     - "8983" # exposes the port 8983 with a random local port, find it with `docker-compose port solr 8983`
  #   environment:
  #     << : *default-environment
  #   volumes:
  #     # - ./lagoon/solr/7/solr-conf/:/solr-conf/conf/
  #     - solr7:/var/solr

networks:
  amazeeio-network:
    external: true

volumes:
  app:
  # Add a volume for the DB so it persists between shutdowns.
  mysql:
  solr7: