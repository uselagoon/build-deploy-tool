apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "solr.fullname" . }}
  labels:
    {{- include "solr.labels" . | nindent 4 }}
  annotations:
    {{- include "solr.annotations" . | nindent 4 }}
    lagoon.sh/config_map_sha: {{ .Values.configMapSha | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "solr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "solr.labels" . | nindent 8 }}
      annotations:
        {{- include "solr.annotations" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: {{ .Values.persistentStorage.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistentStorage.name }}
      priorityClassName: {{ include "solr.lagoonPriority" . }}
      enableServiceLinks: false
      securityContext:
        fsGroup: 0
      containers:
        - image: {{ .Values.image | quote }}
          name: {{ .Chart.Name }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - containerPort: 8983
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 8983
            initialDelaySeconds: 1
            periodSeconds: 3
          livenessProbe:
            tcpSocket:
              port: 8983
            initialDelaySeconds: 90
            timeoutSeconds: 3
            failureThreshold: 5
          securityContext:
            runAsGroup: 0
          envFrom:
            - configMapRef:
                name: lagoon-env
          env:
            - name: CRONJOBS
              value: {{ .Values.inPodCronjobs | quote }}
          volumeMounts:
            - name: {{ .Values.persistentStorage.name }}
              mountPath: {{ .Values.persistentStorage.path | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
