apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "python-persistent.fullname" . }}
  labels:
    {{- include "python-persistent.labels" . | nindent 4 }}
    {{- if .Values.useSpot }}
    lagoon.sh/spot: {{ .Values.useSpot | quote }}
    {{- end }}
  annotations:
    {{- include "python-persistent.annotations" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "python-persistent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "python-persistent.labels" . | nindent 8 }}
        {{- if .Values.useSpot }}
        lagoon.sh/spot: {{ .Values.useSpot | quote }}
        {{- end }}
      annotations:
        {{- include "python-persistent.annotations" . | nindent 8 }}
        lagoon.sh/configMapSha: {{ .Values.configMapSha | quote }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: {{ include "python-persistent.persistentStorageName" . }}
          persistentVolumeClaim:
            claimName: {{ include "python-persistent.persistentStorageName" . }}
      priorityClassName: {{ include "python-persistent.lagoonPriority" . }}
      enableServiceLinks: false
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - image: {{ .Values.image | quote }}
          name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: http
              containerPort: 8800
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 8800
            initialDelaySeconds: 15
            timeoutSeconds: 1
          livenessProbe:
            tcpSocket:
              port: 8800
            initialDelaySeconds: 60
            periodSeconds: 5
          env:
            ## LAGOON_GIT_SHA is injected directly and not loaded via `lagoon-env` config
            ## This will cause the pod to redeploy on every deployment, even the files have not changed
            - name: LAGOON_GIT_SHA
              value: {{ .Values.gitSha | quote }}
            - name: CRONJOBS
              value: |
                {{- toYaml .Values.inPodCronjobs | nindent 16 }}
          envFrom:
            - configMapRef:
                name: lagoon-env
          volumeMounts:
            - name: {{ include "python-persistent.persistentStorageName" . }}
              mountPath: {{ .Values.persistentStorage.path | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
