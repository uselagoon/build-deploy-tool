{{- if .Values.routesAutogenerateEnabled -}}
{{- $fullName := include "nginx-php.fullname" . -}}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    lagoon.sh/autogenerated: "true"
    {{- include "nginx-php.labels" . | nindent 4 }}
  annotations:
    {{- if eq .Values.routesAutogenerateInsecure "Allow"}}
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    ingress.kubernetes.io/ssl-redirect: "false"
    {{- else if eq .Values.routesAutogenerateInsecure "Redirect"}}
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    ingress.kubernetes.io/ssl-redirect: "true"
    {{- else if eq .Values.routesAutogenerateInsecure "None"}}
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    ingress.kubernetes.io/ssl-redirect: "true"
    {{- end }}
    nginx.ingress.kubernetes.io/server-snippet: |-
       add_header X-Robots-Tag "noindex, nofollow";
    kubernetes.io/tls-acme: "true"
    # use a specific fastly service
    {{- if .Values.fastly.serviceId }}
    fastly.amazee.io/service-id: "{{ .Values.fastly.serviceId }}"
    {{- end }}
    fastly.amazee.io/watch: "{{ .Values.fastly.watch }}"
    # use a custom secret for this ingress (customer supplied fastly integration)
    {{- if .Values.fastly.apiSecretName }}
    fastly.amazee.io/api-secret-name: "{{ .Values.fastly.apiSecretName }}"
    {{- end }}
    {{- include "nginx-php.annotations" . | nindent 4 }}
spec:
  tls:
    - hosts:
      {{- $host := include "nginx-php.autogeneratedHost" (dict "root" $) }}
      {{- if and .Values.routesAutogenerateShortSuffix (gt ($host | len) 63) }}
        - {{ include "nginx-php.autogeneratedShortHost" (dict "root" $) | quote }}
      {{- end }}
        - {{ $host | quote }}
      {{- if $.Values.routesAutogeneratePrefixes }}
      {{- range $k, $prefix := $.Values.routesAutogeneratePrefixes }}
      {{- $host := include "nginx-php.autogeneratedHost" (dict "root" $ "prefix" $prefix) }}
        - {{ $host | quote }}
      {{- end }}
      {{- end }}
      secretName: {{ $fullName }}-tls
  rules:
    {{- $host := include "nginx-php.autogeneratedHost" (dict "root" $) }}
    - host: {{ $host | quote }}
      http:
        paths:
          - backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $.Values.service.port }}
    {{- if $.Values.routesAutogeneratePrefixes }}
    {{- range $k, $prefix := $.Values.routesAutogeneratePrefixes }}
    {{- $host := include "nginx-php.autogeneratedHost" (dict "root" $ "prefix" $prefix) }}
    - host: {{ $host | quote }}
      http:
        paths:
          - backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $.Values.service.port }}
    {{- end }}
    {{- end }}
{{- else }}
# empty
{{- end }}
