items:
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      fastly.amazee.io/service-id: service-id
      fastly.amazee.io/watch: "true"
      idling.amazee.io/disable-request-verification: "false"
      ingress.kubernetes.io/ssl-redirect: "true"
      kubernetes.io/tls-acme: "true"
      lagoon.sh/branch: main
      lagoon.sh/version: v2.7.x
      monitor.stakater.com/enabled: "true"
      monitor.stakater.com/overridePath: /
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      uptimerobot.monitor.stakater.com/alert-contacts: alertcontact
      uptimerobot.monitor.stakater.com/interval: "60"
      uptimerobot.monitor.stakater.com/status-pages: statuspageid
    creationTimestamp: null
    labels:
      activestandby.lagoon.sh/migrate: "false"
      app.kubernetes.io/instance: example.com
      app.kubernetes.io/managed-by: build-deploy-tool
      app.kubernetes.io/name: custom-ingress
      lagoon.sh/autogenerated: "false"
      lagoon.sh/buildType: branch
      lagoon.sh/environment: main
      lagoon.sh/environmentType: production
      lagoon.sh/primaryIngress: "true"
      lagoon.sh/project: example-project
      lagoon.sh/service: example.com
      lagoon.sh/service-type: custom-ingress
      lagoon.sh/template: custom-ingress-0.1.0
      route.lagoon.sh/source: yaml
    name: example.com
    namespace: example-project-main
    resourceVersion: "1"
  spec:
    rules:
    - host: example.com
      http:
        paths:
        - backend:
            service:
              name: node
              port:
                name: http
          path: /
          pathType: Prefix
    tls:
    - hosts:
      - example.com
      secretName: example.com-tls
  status:
    loadBalancer: {}
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      fastly.amazee.io/watch: "false"
      idling.amazee.io/disable-request-verification: "false"
      ingress.kubernetes.io/ssl-redirect: "true"
      kubernetes.io/tls-acme: "true"
      lagoon.sh/branch: main
      lagoon.sh/version: v2.7.x
      monitor.stakater.com/enabled: "false"
      nginx.ingress.kubernetes.io/server-snippet: |
        add_header X-Robots-Tag "noindex, nofollow";
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    creationTimestamp: null
    labels:
      app.kubernetes.io/instance: node
      app.kubernetes.io/managed-by: build-deploy-tool
      app.kubernetes.io/name: autogenerated-ingress
      lagoon.sh/autogenerated: "true"
      lagoon.sh/buildType: branch
      lagoon.sh/environment: main
      lagoon.sh/environmentType: production
      lagoon.sh/project: example-project
      lagoon.sh/service: node
      lagoon.sh/service-type: node
      lagoon.sh/template: autogenerated-ingress-0.1.0
      route.lagoon.sh/source: autogenerated
    name: node
    namespace: example-project-main
    resourceVersion: "1"
  spec:
    rules:
    - host: node-example-project-main.example.com
      http:
        paths:
        - backend:
            service:
              name: node
              port:
                name: http
          path: /
          pathType: Prefix
    tls:
    - hosts:
      - node-example-project-main.example.com
      secretName: node-tls
  status:
    loadBalancer: {}
metadata: {}
